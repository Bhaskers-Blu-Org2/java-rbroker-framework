/*
 * RTaskResultImpl.java
 *
 * Copyright (C) 2010-2014 by Revolution Analytics Inc.
 *
 * This program is licensed to you under the terms of Version 2.0 of the
 * Apache License. This program is distributed WITHOUT
 * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,
 * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the
 * Apache License 2.0 (http://www.apache.org/licenses/LICENSE-2.0) for more details.
 *
 */
package com.revo.deployr.client.broker.impl;

import com.revo.deployr.client.broker.RTaskResult;
import com.revo.deployr.client.broker.RTaskType;
import com.revo.deployr.client.data.RData;

import java.net.URL;
import java.util.List;

/**
 * Represents a handle to the result generated by an
 * {@link com.revo.deployr.client.broker.RTask}.
 */
public class RTaskResultImpl implements RTaskResult {

    public RTaskResultImpl(String id,
                           RTaskType type,
                           boolean success,
                           long timeOnCode,
                           long timeOnServer,
                           long timeOnCall,
                           Exception failure) {

        this(id,
                type,
                success,
                timeOnCode,
                timeOnServer,
                timeOnCall,
                failure,
                false,
                null,
                null, null, null, null);
    }

    public RTaskResultImpl(String id,
                           RTaskType type,
                           boolean success,
                           long timeOnCode,
                           long timeOnServer,
                           long timeOnCall,
                           Exception failure,
                           boolean interrupted,
                           String generatedConsole,
                           List<URL> generatedPlots,
                           List<URL> generatedFiles,
                           List<RData> generatedObjects,
                           List<URL> storedFiles) {

        this.id = id;
        this.type = type;
        this.success = success;
        this.timeOnCode = timeOnCode;
        this.timeOnServer = timeOnServer;
        this.timeOnCall = timeOnCall;
        this.failure = failure;
        this.interrupted = interrupted;
        this.generatedConsole = generatedConsole;
        this.generatedPlots = generatedPlots;
        this.generatedFiles = generatedFiles;
        this.generatedObjects = generatedObjects;
        this.storedFiles = storedFiles;
    }

    /**
     * Task DeployR identifier.
     * <p/>
     * Maps to a project execution or job identifier.
     */
    public final String id;

    /**
     * Task type.
     */
    public final RTaskType type;

    /**
     * Task R session generated console output.
     */
    public final String generatedConsole;

    /**
     * Task R session graphics device generated plots.
     */
    public final List<URL> generatedPlots;

    /**
     * Task R session working directory generated files.
     */
    public final List<URL> generatedFiles;

    /**
     * Task R session workspace generated objects.
     */
    public final List<RData> generatedObjects;

    /**
     * Task generated files stored to DeployR repository.
     */
    public final List<URL> storedFiles;

    /**
     * Task success indicator.
     */
    public final boolean success;

    /**
     * Task interrupted indicator.
     */
    public final boolean interrupted;

    /**
     * Task failure indicator.
     */
    public final Exception failure;

    /**
     * Task time spent being executing R code on server.
     */
    public final long timeOnCode;

    /**
     * Task time spent being processed on server.
     */
    public final long timeOnServer;

    /**
     * Task time spent on call to server.
     */
    public final long timeOnCall;

    /*
     * RTaskResult interface methods.
     */

    /**
     * Task DeployR identifier.
     * <p/>
     * Maps to a project execution or job identifier.
     */
    public String getID() {
        return id;
    }

    /**
     * Task type.
     */
    public RTaskType getType() {
        return type;
    }

    /**
     * Task R session generated console output.
     */
    public String getGeneratedConsole() {
        return generatedConsole;
    }

    /**
     * Task R session graphics device generated plots.
     */
    public List<URL> getGeneratedPlots() {
        return generatedPlots;
    }

    /**
     * Task R session working directory generated files.
     */
    public List<URL> getGeneratedFiles() {
        return generatedFiles;
    }

    /**
     * Task R session workspace generated objects.
     */
    public List<RData> getGeneratedObjects() {
        return generatedObjects;
    }

    /**
     * Task generated files stored to DeployR repository.
     */
    public List<URL> getStoredFiles() {
        return storedFiles;
    }

    /**
     * Task success indicator.
     */
    public boolean isSuccess() {
        return success;
    }

    /**
     * Task interrupted indicator.
     */
    public boolean isInterrupted() {
        return interrupted;
    }

    /**
     * Task failure indicator.
     */
    public Exception getFailure() {
        return failure;
    }

    /**
     * Task time spent executing R code on server.
     */
    public long getTimeOnCode() {
        return timeOnCode;
    }

    /**
     * Task time spent being processed on server.
     */
    public long getTimeOnServer() {
        return timeOnServer;
    }

    /**
     * Task time spent on call to server.
     */
    public long getTimeOnCall() {
        return timeOnCall;
    }

    public String toString() {
        return "[ " + success + " , " +
                timeOnCode + " , " +
                timeOnServer + " , " +
                timeOnCall + " , " +
                failure + " ]";
    }

}
